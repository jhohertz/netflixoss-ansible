#!upstart
description "Exhibitor Server"

env USER={{ zookeeper.user }}

start on startup
stop on shutdown

respawn

exec sudo -u $USER bash -c "java -Dlog4j.configuration=file://{{ exhibitor.log4j_props }} -jar {{ exhibitor.jar_dest }} \
	--port {{ exhibitor.opts.port }} \
	--hostname {{ exhibitor.opts.hostname }} \
	--defaultconfig {{ exhibitor.opts.defaultconfig }} \
	--configtype {{ exhibitor.opts.configtype }} \
	--loglines {{ exhibitor.opts.loglines }} \
	--timeout {{ exhibitor.opts.timeout }} \
	--configcheckms {{ exhibitor.opts.configcheckms }} \
	--nodemodification {{ exhibitor.opts.nodemodification }} \
	--headingtext {{ exhibitor.opts.headingtext }} \
	--jquerystyle {{ exhibitor.opts.jquerystyle }} \
{% if exhibitor.opts.configtype == "file" %}
	--fsconfigdir {{ exhibitor.opts.fsconfigdir }} \
{% elif exhibitor.opts.configtype == "s3" %}
	--s3config {{ exhibitor.opts.s3config }} \
	--s3credentials {{ exhibitor.opts.s3credentials }} \
	--s3region {{ exhibitor.opts.s3region }} \
	--s3backup {{ exhibitor.opts.s3backup }} \
{% else %}
# FIXME: should throw error
{% endif %}
{% if exhibitor.log_to_syslog == "1" or exhibitor.log_to_syslog == "true" %}
	--servo {{ exhibitor.opts.servo }} | logger -t zookeeper
{% else %}
	--servo {{ exhibitor.opts.servo }} 
{% endif %}
# FIXME: above is ugly, being safe as not sure how line ends handled in jinja yet, also, pipe to logger. bleh.

post-start script
  {{ exhibitor.check_script }} || { stop ; exit 1; }
end script
